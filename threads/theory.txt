Поток - это наименьшая часть выполнения программы, которая может быть внесена в расписание операционной системой.
Процесс - группа потоков, выполняемых в одной общей среде.
Потоки используют общую память Heap и другие ресурсы, благодаря чему могут взаимодействовать друг с другом напрямую.

Shared memory -> thread1, thread2... - > OS Thread Scheduler - > CPU1, CPU2..

A system thread создается JVM и выполняется в приложении фоном (например, поток сборщика мусора). Ошибки в системных потоках - Errors
Daemon (скрытый поток) - тот, который не помешает выходу из JVM. Приложение завершается, когда все оставшиеся потоки - скрытые.

Переключение контекста. Приоритет потока Thread.NORM_PRIORITY (число от 1 до 10).

Thread.start() создает новый поток и добавляет задачу в расписание;
После вызова метода start() в очередь к ресурсам будет поставлен и когда-либо будет вызван метод run(), все в run() будет выполняться в новом потоке.

При выполнении первого задания ThreadExecutor создает не скрытый поток: пока ThreadExecutor не будет выключен shutdown(), приложение не сможет завершиться.
ShutDown() не прерывает задания, которые уже выполяются.
ShutDownNow() пытается прервать выполняемые задания.

-> create Executor service: Active, принимает новые задания, выполняет, isShutDown()=false, isTerminated() =false;
-> shutDown(): Shutting down, отменяет новые задания, выполняет старые, isShutDown()=true, isTerminated() =false;
-> Shutdown: isShutDown()=true, isTerminated() =true;

лямбда-выражение Callable отличается от Supplier только тем, что может выбрасывать исключения.

ThreadPool - группа подготовленных потоков, которые могут использоваться несколько раз.

DeadLock - когда два потока ждут вечно, блокируя друг друга. Один из способов избежать этого - упорядочить обращение потоков к ресурсам.
Starvation - когда один поток вечно отказывает в доступе к объекту всем остальным потокам, т.к не может завершить задание.
LiveLock - когда потоки постоянно повторяют одно и то же действие, пытаясь выйти из DeadLock
Race condition - когда два задания, которые должны выполняться строго последовательно, выполняются одновременно
